apply plugin: 'java'
apply plugin: 'download-task'
apply plugin: 'forge'

// Set a couple of variables
archivesBaseName = mod_name
group = "pixlepix." + mod_name
lib_dir = new File(lib_dir)

// Set minecraft version
minecraft {
    version = minecraft_version + "-" + forge_version
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.0-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:1.0'
        classpath "org.lwjgl.lwjgl:lwjgl:${lwjgl_version}"
    }
}

// Check for and download CodeChickenCore, CodeChickenLib, and NEI
if ( !lib_dir.exists() ){
    lib_dir.mkdirs()
    ext.libFiles = [
        'http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.6.4/NotEnoughItems-dev%201.6.1.9.jar',
        'http://www.chickenbones.craftsaddle.org/Files/New_Versions/1.6.4/CodeChickenCore-dev%200.9.0.9.jar',
        'http://files.minecraftforge.net/CodeChickenLib/CodeChickenLib-dev-1.6.4-1.0.0.62.jar'
    ]
    download {
        src libFiles
        dest lib_dir
    }
}

// All libraries from the ./libs/ folder are added as dependencies
dependencies {
    compile fileTree(dir: lib_dir, includes: ['*.jar'])
}

// Get the build number from the environment, otherwise get from gradle.properties
if (System.getenv().BUILD_NUMBER != null) {
    build_number = System.getenv().BUILD_NUMBER
}
version = mod_version + "-" + build_number

// @TODO - make this actually put the version/build number into the mcmod.info file
processResources {
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod/info'
        include 'version.properties'
        // replace version and mcversion
        expand 'version': mod_version, 'mcversion': version, 'buildnumber': build_number
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'version.properties'
    }
}

task showProperties {
    doLast {
        println "~~Versions~~"
        println "Minecraft: " + minecraft.version
        println "Forge: $forge_version"
        println "Version $version"
        println "Particle Physics: $mod_version"
        println "~~Misc~~"
        println "Build #$build_number"
        println "Libraries: $lib_dir"
    }
}

task runClient(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "net.minecraft.launchwrapper.Launch"
    args("--version", "1.6",
        "--tweakClass", "cpw.mods.fml.common.launcher.FMLTweaker",
        "--accessToken", "FML")
    jvmArgs("-Xincgc",
        "-Xmx1024M",
        "-Xms1024M",
        "-Djava.library.path=${project.buildDir}/natives",
        "-Dfml.ignoreInvalidMinecraftCertificates=true")
    workingDir("eclipse")
}

task runServer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "cpw.mods.fml.relauncher.ServerLaunchWrapper"
    jvmArgs("-Xincgc", "-Dfml.ignoreInvalidMinecraftCertificates=true")
}
